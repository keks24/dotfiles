#############################################################################
# Copyright 2020-2022 Ramon Fischer                                         #
#                                                                           #
# Licensed under the Apache License, Version 2.0 (the "License");           #
# you may not use this file except in compliance with the License.          #
# You may obtain a copy of the License at                                   #
#                                                                           #
#     http://www.apache.org/licenses/LICENSE-2.0                            #
#                                                                           #
# Unless required by applicable law or agreed to in writing, software       #
# distributed under the License is distributed on an "AS IS" BASIS,         #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #
# See the License for the specific language governing permissions and       #
# limitations under the License.                                            #
#############################################################################

# unbound keys
unbind-key c # create new window
unbind-key C-b # prefix
unbind-key & # kill window
unbind-key C-z # suspend client
unbind-key C-s # horizontal window split
unbind-key C-v # vertical window split
unbind-key % # horizontal window split
unbind-key '"' # vertical window split
unbind-key o # ?
unbind-key [ # enter copy mode
unbind-key n # ?
unbind-key ] # paste contents of buffer_0
unbind-key p # ?
unbind-key M-n # next window
unbind-key M-p # previous window
unbind-key M-o # rotate window
unbind-key M-1 # select layout even horizontal
unbind-key M-2 # select layout even vertical
unbind-key M-3 # select layout main horizontal
unbind-key M-4 # select layout main vertical
unbind-key M-5 # select layout tiled
unbind-key -T "copy-mode-vi" space # vi mode: copy selection and cancel
unbind-key -T "copy-mode-vi" v # vi mode: rectangle toggle
unbind-key -T "copy-mode-vi" y # vi mode: copy selection and cancel

# define prefix
set-option -g prefix "C-a"
bind-key C-a "send-prefix"

# kill session
bind-key K confirm-before -p "kill session #{session_name}? (y/n)" "kill-session"

# default shell
set-option -g default-shell "/bin/zsh"

# default command
#set-option -g default-command ""

# default terminal colour
set-option -g default-terminal "tmux-256color"

# set buffer limit
set-option -g history-limit "100000"

# clear tmux buffer
bind-key C-k clear-history

# reload user tmux config
bind-key R source-file "${HOME}/.tmux.conf"\; \
    display-message "Reloaded: ${HOME}/.tmux.conf"

# lock tmux after 30 minutes with "cmatrix" as screensaver
#set-option -g lock-command "cmatrix -sab"
#set-option -g lock-after-time "1800"
#set-option -g lock-server "on"

# message bar colour
set-option -g message-style "bg=#1c1c1c,fg=yellow,bright,underscore"

# enable status bar
set-option -g status "on"

# set status bar refresh interval
set-option -g status-interval "2"

# bash: to figure out tmux colour palette
#for i in {0..255}; do
#    printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
#done

# status line appearance
set-option -g status-style bg="default"
set-option -g status-style fg="white"

# status left: memory usage and system load
set-option -g status-left-length "110"
#set-option -g status-interval "2"
%hidden current_memory_usage="$(awk '\
    /^MemTotal:/ { mem_total=$2 }; \
    /^MemFree:/ { mem_free=$2 }; \
    /^Buffers:/ { mem_buffers=$2 }; \
    /^Cached:/ { mem_cached=$2 }; \
    /^SwapCached:/ { swap_cached=$2 }; \
    /^SwapTotal:/ { swap_total=$2 }; \
    /^SwapFree:/ { swap_free=$2 }; \
    /^Dirty:/ { mem_dirty=$2 }; \
    /^Writeback:/ { mem_writeback=$2 }; \
    /^SReclaimable:/ \
    {
        mem_sreclaimable=$2;

        mem_total_mb=mem_total/1024;
        mem_free_mb=mem_free/1024;
        mem_buffers_mb=mem_buffers/1024;
        mem_cached_mb=mem_cached/1024;
        mem_sreclaimable_mb=mem_sreclaimable/1024;
        mem_used_mb=mem_total_mb-mem_free_mb-mem_buffers_mb-mem_cached_mb-mem_sreclaimable_mb;

        if(mem_total_mb == 0)
            mem_used_percentage=0
        else
            mem_used_percentage=mem_used_mb/mem_total_mb*100;

        swap_cached_mb=swap_cached/1024;
        swap_total_mb=swap_total/1024;
        swap_free_mb=swap_free/1024;
        swap_used_mb=swap_total_mb-swap_free_mb-swap_cached_mb;

        if(swap_total_mb == 0)
            swap_used_percentage=0
        else
            swap_used_percentage=swap_used_mb/swap_total_mb*100;

        mem_dirty_mb=mem_dirty/1024;
        mem_writeback_mb=mem_writeback/1024;

        printf(\"[#[fg=cyan]%.0f/%.0f/%.2f%%#[fg=white]]\", mem_used_mb, mem_total_mb, mem_used_percentage);
        printf(\"[#[fg=red]%.0f/%.0f/%.2f%%#[fg=white]]\", swap_used_mb, swap_total_mb, swap_used_percentage);
        printf(\"[#[fg=magenta]%.0f/%.0f#[fg=white]]\", mem_dirty_mb, mem_writeback_mb);
    }' '/proc/meminfo')"
%hidden current_system_load="$(< '/proc/loadavg')"
set-option -g status-left " #(echo ${current_memory_usage}) / [#[fg=green]#(echo ${current_system_load})#[fg=white]] \u52c7 "

# status middle: set window status appearance
set-option -g renumber-windows "on"
set-window-option -g monitor-activity "on"
set-window-option -g bell-action "other"
#set-window-option -g window-status-style "fg=white,dim"
set-window-option -g window-status-activity-style "fg=yellow,nodim,blink"
set-window-option -g window-status-bell-style "fg=red,nodim,blink"
#set-window-option -g window-status-last-style "fg=magenta,dim"
set-window-option -g window-status-format "#[fg=white,dim]#{window_index}:#{pane_current_command}[#{window_flags}]"
set-window-option -g window-status-current-format "#[fg=white,nodim]#{window_index}:#[fg=green]#{pane_current_command}#[fg=white][#{window_flags}]"
set-window-option -g window-status-separator "#[fg=brightyellow,nodim]Â¦"

# status right: username, hostname (fqdn), uptime, ip address and session name
set-option -g status-right-length "110"
# must be returned as floating point number, "%d" returns false values.
%hidden current_uptime="$(awk '\
    {
        uptime=$1;
        uptime_days=int(uptime/60/60/24)
        uptime_hours=int(uptime/60/60%24)
        uptime_minutes=int(uptime/60%60)
        uptime_seconds=int(uptime%60)

        printf(\"[#[fg=yellow]up %02.0f:%02.0f:%02.0f:%02.0f#[fg=white]]\", uptime_days, uptime_hours, uptime_minutes, uptime_seconds);
    }' '/proc/uptime')"
%hidden current_ip_address="$(ip --oneline -family inet route get 1 | awk \'
    {
        ipv4_address=$7;
        if(ipv4_address ~ /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/)
            print \"[#[fg=#555555]\"ipv4_address\"#[fg=white]]\";
        else
            print \"[#[fg=#555555]n/a#[fg=white]]\";
    }')"
## "media-fonts/fs-fonts" is required to display the kanji character for "courage"
%if "#{==:${USER},root}"
    set-option -g status-right " \u52c7 #[fg=red]${USER}#[fg=white]@#{host} / #(echo ${current_uptime}) / #(echo ${current_ip_address}) / [#[fg=#555555]#{session_name}#[fg=white]] "
%else
    set-option -g status-right " \u52c7 #[fg=blue]${USER}#[fg=white]@#{host} / #(echo ${current_uptime}) / #(echo ${current_ip_address}) / [#[fg=#555555]#{session_name}#[fg=white]] "
%endif

# position pane status
set-option -g pane-border-status "top"

# pane status
%if "#{==:${USER},root}"
    set-option -g pane-border-style "fg=red,dim"; set-option -g pane-active-border-style "fg=red"
%else
    set-option -g pane-border-style "fg=blue,dim"; set-option -g pane-active-border-style "fg=blue"
%endif
set-option -g pane-border-format "#{pane_index}: [#{history_size}/#{history_limit}][#{pane_synchronized}] #{pane_current_path} "

# set first window to index 1 (not 0) to map more to the keyboard layout
set-option -g base-index "1"
set-option -g pane-base-index "1"

# disable renaming windows by other programs
set-option -g allow-rename "off"
set-window-option -g automatic-rename "off"

# centre window list
set-option -g status-justify "centre"

# arrange windows
bind-key -n M-1 select-layout "even-horizontal"
bind-key -n M-2 select-layout "even-vertical"
bind-key -n M-3 select-layout "tiled"
bind-key -n M-o select-layout "main-horizontal"
bind-key -n M-e select-layout "main-vertical"

# split window horizontally (PREFIX + o)
bind-key o split-window -c "#{pane_current_path}"

# split window vertically (PREFIX + e)
bind-key e split-window -h -c "#{pane_current_path}"

# synchronize panes
bind-key s set-window-option "synchronize-panes"

# create new window (PREFIX + c)
bind-key c new-window -c "#{pane_current_path}"

# convenient window navigation
bind-key -n M-n select-window -t ":+"
bind-key -n M-p select-window -t ":-"

# jump between words like in bash
set-window-option -g xterm-keys "on"

# set time to display panes
set-option -g display-panes-time "3000"

# enable faster key repetition
set-option -sg escape-time 0

# select pane by number
bind-key q "display-panes"

# break pane to new window (PREFIX + !)
bind-key ! "break-pane"

# join/send the last active pane to the currently active window (PREFIX + ", PREFIX + ^)
bind-key '"' command-prompt -p "join pane from:"  "join-pane -s ':%%'"
bind-key ^ command-prompt -p "send pane to:"  "join-pane -t ':%%'"

# kill window (PREFIX + k)
bind-key k confirm-before -p "kill window #{window_name}? (y/n)" "kill-window"

# turn mouse mode on (PREFIX + m)
bind-key m \
    set-option -g mouse "on" \; \
    display-message "Mouse mode: on"

# turn mouse mode off (PREFIX + M)
bind-key M \
    set-option -g mouse "off" \; \
    display-message "Mouse mode: off"

# enable vim navigation in copy-mode
set-window-option -g mode-keys "vi"

# vim style copy/paste (PREFIX + y, v, y, PREFIX + p)
bind-key y "copy-mode"
bind-key -T "copy-mode-vi" v \; \
    send-keys -X "begin-selection"
bind-key -T "copy-mode-vi" y \; \
    send-keys -X "copy-selection-and-cancel"
bind-key p "paste-buffer"

# search within the buffer
bind-key -n C-space "copy-mode" \; \
    send-keys "?"
bind-key -n M-space "copy-mode" \; \
    send-keys "/"

# options for neovim
set-option -sg escape-time "10"

# plugins
## tmux navigator
### workaround to preserve tmux variable for neovim when using "sudo -i" or "sudo -s"
### /etc/sudoers: Defaults env_keep += "TMUX"
### smart pane switching with awareness of vim splits
%hidden is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "${is_vim}" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "${is_vim}" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "${is_vim}" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "${is_vim}" "send-keys C-l" "select-pane -R"
#bind-key -n C-\\ if-shell "${is_vim}" "send-keys C-\\" "select-pane -l"
bind-key -T "copy-mode-vi" C-h select-pane "-L"
bind-key -T "copy-mode-vi" C-j select-pane "-D"
bind-key -T "copy-mode-vi" C-k select-pane "-U"
bind-key -T "copy-mode-vi" C-l select-pane "-R"
#bind-key -T copy-mode-vi C-\\ select-pane -l
# bring back clear screen (PREFIX + CTRL + l)
bind-key C-l send-keys "C-l"

## tmux resurrect
run-shell "/usr/local/share/git/tmux/tmux-resurrect/resurrect.tmux"
### resurrect save directory
#set-option -g @resurrect-dir "~/.tmux/resurrect"
### for vim
set-option -g @resurrect-strategy-vim "session"
### for neovim
set-option -g @resurrect-strategy-nvim "session"
### restore pane contents
#set-option -g @resurrect-capture-pane-contents "on"
